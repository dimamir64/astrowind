---
interface Props {
    activeUrl: string;
    isLoggedIn: boolean;
}

const { activeUrl, isLoggedIn } = Astro.props
const pages = isLoggedIn ? ['home', 'profile'] : ['home', 'login']

---
<nav>
    { 
        pages.map(route => 
            <a class:list={[{'active':  activeUrl === route }]} href={`/${route === 'home' ? '' : route}`}>
                {route}
            </a>
    )}
    { isLoggedIn && <div class='logout-action'>logout</div> }
</nav>
<style>
    nav {
	    margin: auto;
	    padding: 1rem;
	    width: 800px;
	    font-size: 20px;
	    line-height: 1.6;
        display: flex;
        gap: 2rem;
        margin-bottom: 4rem;
        border-radius: .5rem;
        border: 3px dotted #bdb;
        box-sizing: border-box;
    }
    nav a, nav a:-webkit-any-link {
        color: #bdb;
        font-weight: 700;
        transition: .2s all;
        border: 3px solid transparent;
    }
    nav a:hover {
		color: lime;
    }
    nav a.active {
        border-bottom-color: #bdb;
    }
    nav a.active:hover {
        border-bottom-color: lime;
    }
    .logout-action {
        margin-left: auto;
        font-weight: 700;
        color: #ddd;
        border: 3px solid #ddd;
        padding: 0 1rem;
        border-radius: .5rem;
        transition: .2s all;
        cursor: pointer;
    }
    .logout-action:hover {
        border-color: lime;
        color: lime;
    }
</style>

<script>
import {supabase} from '../utils/supabaseBrowser'
// we add the logout logic here

const logoutAction = document.querySelector('.logout-action')
if (logoutAction) {
    logoutAction.addEventListener('click', () => {
        supabase.auth.signOut()
    })
}
</script>